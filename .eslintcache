[{"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\index.tsx":"1","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reportWebVitals.ts":"2","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\App.tsx":"3","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reducers\\index.ts":"4","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reducers\\settingReducer.ts":"5","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\components\\login.tsx":"6","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\actions\\index.ts":"7","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\api\\index.ts":"8","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\components\\grid.tsx":"9","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reducers\\tradeViewReducer.ts":"10","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\appUtils.ts":"11","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\sagas\\index.ts":"12","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\sagas\\tradeSagas.ts":"13","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\actions\\entityActions.ts":"14","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\sagas\\generics.ts":"15","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\columnDefs.ts":"16","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\dataFormatter.ts":"17","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\predefinedConfig.ts":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1135,"mtime":1607965278879,"results":"22","hashOfConfig":"20"},{"size":265,"mtime":1607920732540,"results":"23","hashOfConfig":"20"},{"size":869,"mtime":1607912943604,"results":"24","hashOfConfig":"20"},{"size":4153,"mtime":1608130151930,"results":"25","hashOfConfig":"20"},{"size":621,"mtime":1608043703035,"results":"26","hashOfConfig":"20"},{"size":2020,"mtime":1608129132134,"results":"27","hashOfConfig":"20"},{"size":9453,"mtime":1608228647108,"results":"28","hashOfConfig":"20"},{"size":2912,"mtime":1608044053831,"results":"29","hashOfConfig":"20"},{"size":286,"mtime":1607957265168,"results":"30","hashOfConfig":"20"},{"size":694,"mtime":1608043672581,"results":"31","hashOfConfig":"20"},{"size":1116,"mtime":1608043559571,"results":"32","hashOfConfig":"20"},{"size":1177,"mtime":1608043636867,"results":"33","hashOfConfig":"20"},{"size":511,"mtime":1607958877921,"results":"34","hashOfConfig":"20"},{"size":1499,"mtime":1608223999414,"results":"35","hashOfConfig":"20"},{"size":1445,"mtime":1608043919895,"results":"36","hashOfConfig":"20"},{"size":2553,"mtime":1608227985089,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"121f9mv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\index.tsx",[],["80","81"],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reportWebVitals.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\App.tsx",["82"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport reducers from './reducers';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport Login from './components/login';\nimport Grid from './components/grid';\nimport rootSaga from './sagas';\n\nclass App extends React.Component{\n  store: any;\n  constructor(props: any) {\n    super(props);\n    const sagaMiddleware = createSagaMiddleware()\n    this.store = createStore(\n      reducers,\n      applyMiddleware(sagaMiddleware, logger)\n      )\n      debugger;\n      sagaMiddleware.run(rootSaga);\n  }\n  render(){\n    return (\n      <Provider store={this.store}>\n        <Router basename={process.env.REACT_APP_BASENAME}>\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/home\" component={Grid} />\n            </Switch>\n        </Router>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reducers\\index.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reducers\\settingReducer.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\components\\login.tsx",["83"],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\actions\\index.ts",["84"],"import { Dispatch } from \"redux\";\r\n\r\nconst createAction: any = (type: string, payload: any) => {\r\n    const action: any = {\r\n      type\r\n    };\r\n    if (payload) {\r\n      action.payload = payload;\r\n    }\r\n    debugger;\r\n    return action;\r\n  };\r\n\r\nexport const isLoggedIn = (params: any) => createAction('IS_LOGGED_IN', params);\r\n\r\nexport const getTradeMetadata = (params: any) => createAction('FETCH_TRADE_META_DATA_TRIGGER', params)\r\n\r\nexport const getTradeData = (params: any) => createAction('FETCH_TRADE_DATA_TRIGGER', params)\r\n\r\nexport const setUpdatedIds = (params: any) => createAction('SET_UPDATED_IDS', params);","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\api\\index.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\components\\grid.tsx",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\reducers\\tradeViewReducer.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\appUtils.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\sagas\\index.ts",["103","104","105","106"],"import { fork, put, takeLatest, takeEvery, all } from 'redux-saga/effects';\r\nimport { fetchTradeMetaData, fetchTradeData } from './tradeSagas'\r\nimport {FETCH_TRADE_META_DATA} from '../actions/entityActions';\r\n//import { fetchLegalMetaData } from './legalSagas'\r\n\r\nexport default function* rootSaga() {\r\n  debugger;\r\n  yield all([\r\n    yield takeEvery('FETCH_TRADE_META_DATA_TRIGGER',\r\n      fetchTradeMetaData),\r\n    yield takeEvery('FETCH_TRADE_DATA_TRIGGER',\r\n      fetchTradeData),\r\n  ])\r\n    // yield takeEvery('FETCH_LEGAL_META_DATA'.TRIGGER,\r\n    //   fetchLegalMetaData),\r\n    // yield takeEvery('SET_TRADE_FILTER_COLUMN_VALUES'.TRIGGER,\r\n    //   fetchTradeFilterColumnValues)       \r\n}","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\sagas\\tradeSagas.ts",["107"],"import { tradeMetaDataFetch, tradeDataFetch } from '../actions/entityActions'\r\nimport {fetchEntity} from './generics';\r\nimport * as api from '../api';\r\n\r\nexport function* fetchTradeMetaData(action: any) {\r\n  const { destinationObject } = action.payload;\r\n  debugger;\r\n  const response = yield fetchEntity(\r\n    tradeMetaDataFetch,\r\n    api.getMetadata,\r\n    [destinationObject],\r\n    action\r\n  );\r\n}\r\n\r\nexport function* fetchTradeData(action: any) {\r\n  const { request } = action.payload;\r\n  const response = yield fetchEntity(\r\n    tradeDataFetch,\r\n    api.getItems,\r\n    [request],\r\n    action\r\n  );\r\n}\r\n\r\n// export function* fetchTradeFilterColumnValues(action: any) {\r\n//   const { columnNames, destinationObject } = action.payload;\r\n//   const body = {\r\n//     \"queryName\": destinationObject,\r\n//     columnNames,\r\n//     \"aggregateColumnNames\": [\r\n//       {\r\n//         \"columnName\": columnNames[0],\r\n//         \"aggregationType\": \"COUNT\"\r\n//       }\r\n//     ]\r\n//   }\r\n//   const response = yield fetchEntity(\r\n//     setTradeFilterValues,\r\n//     api.getItems,\r\n//     [body],\r\n//     action\r\n//   )\r\n// }\r\n","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\actions\\entityActions.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\sagas\\generics.ts",["108"],"import { put, apply, call } from 'redux-saga/effects';\r\n\r\nexport function* fetchEntity(entity: any, apiFn: any, body: any, action: any) {\r\n  const initialActionPayload = action.payload;\r\n  const {data: response, status} = yield apply(null, apiFn, [...body]);\r\n  let error;\r\n  debugger;\r\n  if(status === 200) {\r\n    yield put(entity.success(response.data, initialActionPayload));\r\n  } else {\r\n    error = 'Oops! pleae try again later. '\r\n    yield put(entity.failure(error));\r\n  }\r\n  return { response, error}\r\n}","C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\columnDefs.ts",["109"],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\dataFormatter.ts",[],"C:\\Users\\YuanZhao\\ag-grid-ts-react\\src\\utils\\predefinedConfig.ts",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":12},{"ruleId":"114","severity":1,"message":"118","line":101,"column":37,"nodeType":"116","messageId":"117","endLine":101,"endColumn":46},{"ruleId":"114","severity":1,"message":"119","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"120","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"121","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"122","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":22},{"ruleId":"114","severity":1,"message":"123","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":34},{"ruleId":"114","severity":1,"message":"124","line":3,"column":36,"nodeType":"116","messageId":"117","endLine":3,"endColumn":47},{"ruleId":"114","severity":1,"message":"125","line":16,"column":8,"nodeType":"116","messageId":"117","endLine":16,"endColumn":17},{"ruleId":"114","severity":1,"message":"126","line":21,"column":21,"nodeType":"116","messageId":"117","endLine":21,"endColumn":36},{"ruleId":"114","severity":1,"message":"127","line":21,"column":38,"nodeType":"116","messageId":"117","endLine":21,"endColumn":51},{"ruleId":"114","severity":1,"message":"128","line":21,"column":53,"nodeType":"116","messageId":"117","endLine":21,"endColumn":65},{"ruleId":"114","severity":1,"message":"129","line":21,"column":85,"nodeType":"116","messageId":"117","endLine":21,"endColumn":113},{"ruleId":"114","severity":1,"message":"130","line":21,"column":115,"nodeType":"116","messageId":"117","endLine":21,"endColumn":132},{"ruleId":"114","severity":1,"message":"131","line":22,"column":3,"nodeType":"116","messageId":"117","endLine":22,"endColumn":26},{"ruleId":"114","severity":1,"message":"132","line":22,"column":28,"nodeType":"116","messageId":"117","endLine":22,"endColumn":36},{"ruleId":"114","severity":1,"message":"133","line":22,"column":38,"nodeType":"116","messageId":"117","endLine":22,"endColumn":53},{"ruleId":"114","severity":1,"message":"134","line":22,"column":55,"nodeType":"116","messageId":"117","endLine":22,"endColumn":78},{"ruleId":"114","severity":1,"message":"135","line":139,"column":19,"nodeType":"116","messageId":"117","endLine":139,"endColumn":26},{"ruleId":"114","severity":1,"message":"136","line":139,"column":28,"nodeType":"116","messageId":"117","endLine":139,"endColumn":38},{"ruleId":"114","severity":1,"message":"137","line":172,"column":13,"nodeType":"116","messageId":"117","endLine":172,"endColumn":23},{"ruleId":"114","severity":1,"message":"138","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":14},{"ruleId":"114","severity":1,"message":"139","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"140","line":1,"column":21,"nodeType":"116","messageId":"117","endLine":1,"endColumn":31},{"ruleId":"114","severity":1,"message":"141","line":3,"column":9,"nodeType":"116","messageId":"117","endLine":3,"endColumn":30},{"ruleId":"114","severity":1,"message":"142","line":8,"column":9,"nodeType":"116","messageId":"117","endLine":8,"endColumn":17},{"ruleId":"114","severity":1,"message":"143","line":1,"column":22,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"144","line":18,"column":10,"nodeType":"116","messageId":"117","endLine":18,"endColumn":23},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'Dispatch' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'AgGridColumn' is defined but never used.","'ClientSideRowModelModule' is defined but never used.","'GridOptions' is defined but never used.","'Adaptable' is defined but never used.","'DataChangedInfo' is defined but never used.","'FilterOptions' is defined but never used.","'AdaptableApi' is defined but never used.","'ActionColumnClickedEventArgs' is defined but never used.","'AdaptableMenuItem' is defined but never used.","'ActionColumnClickedInfo' is defined but never used.","'MenuInfo' is defined but never used.","'AdaptableColumn' is defined but never used.","'GetColumnValuesFunction' is defined but never used.","'request' is assigned a value but never used.","'parentNode' is assigned a value but never used.","'screenName' is assigned a value but never used.","'fork' is defined but never used.","'put' is defined but never used.","'takeLatest' is defined but never used.","'FETCH_TRADE_META_DATA' is defined but never used.","'response' is assigned a value but never used.","'call' is defined but never used.","'abValueGetter' is defined but never used.","no-global-assign","no-unsafe-negation"]